# Collector config for OpenTelemetry Collector
receivers:
  otlp:
    protocols:
      grpc:
      http:
  redis:
    endpoint: redis:6379

  # mysql:
  #   username: testuser
  #   password: testpassword
  #   endpoint: mysql:3306
  prometheus:
    config:
      scrape_configs:
        - job_name: "otel-collector"
          scrape_interval: 5s
          static_configs:
            - targets: ["0.0.0.0:8888"]
  # postgresql:
  #   endpoint: postgres:5432
  #   # transport: tcp
  #   username: testuser
  #   password: testpassword
  #   databases:
  #     - opentelemetry-tests
  #   tls:
  #     insecure: true
  # apache:
  #   endpoint: "http://apache:80/server-status?auto"

  hostmetrics:
    scrapers:
      cpu:
      disk:
      paging:
      load:
      process:
      processes:
      filesystem:
      network:
      memory:

exporters:
  prometheus:
    endpoint: "0.0.0.0:8889"

  logging:
    loglevel: debug

  # configure collector to send data to a local satellite
  # otlp:
  #   endpoint: satellite:8360
  #   insecure: true
  #   headers:
  #     "lightstep-access-token": "<ACCESS TOKEN>"

  # configuring otlp to public satellites
  otlp:
    endpoint: ingest.lightstep.com:443
    headers:
      "lightstep-access-token": "tmvklREb_eccd2Iqui35lfdwx_RXa_s0sQI-O6TTTf2m2d5gYLGt-3OTNZoDUJu9heBh9PCJ6foMRG5dGo622AaV_gP9q9GBmaHTdodT"

    # configure collector to send data to jaeger
  jaeger:
    endpoint: jaeger:6831

processors:
  resourcedetection:
    detectors: [system]
  batch:

service:
  telemetry:
    metrics:
  pipelines:
    traces:
      receivers: [otlp]
      exporters: [logging, otlp]
      processors: [batch]
    metrics:
      receivers: [mysql, prometheus, redis, postgresql, apache, hostmetrics]
      processors: [resourcedetection, batch]
      exporters: [logging, otlp]
